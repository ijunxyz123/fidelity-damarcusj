[{"path":"/articles/fidelity_vignette1.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Calculating animal site fidelity in R with package `fidelity`","text":"fidelity package provides functions calculate animal site fidelity multiple spatio-temporal scales contrasting observed patterns return ecologically meaningful baseline expectations derived null, memory-free movement models. package : interested exploring effect movement parameters landscape characteristics patterns return using agent-based simulation; interested establishing ecologically meaningful null expectation site fidelity study system. context, please refer associated paper: Picardi, S., Abrahms, B., Gelzer, E., Morrison, T., Verzuh, T., Merkle, J. “Defining null expectations animal site fidelity”. Ecology Letters (2022). https://doi.org/10.1111/ele.14148 Depending goal , follow one two possible workflows, illustrated diagram:","code":""},{"path":"/articles/fidelity_vignette1.html","id":"goal-1-explore-effect-of-movement-and-landscape-characteristics-on-patterns-of-return","dir":"Articles","previous_headings":"","what":"Goal 1: Explore effect of movement and landscape characteristics on patterns of return","title":"Calculating animal site fidelity in R with package `fidelity`","text":"goal quantify emerging patterns return vary function underlying movement landscape characteristics, can use agent-based simulation approach generate movement tracks set chosen movement models. package implements movement models family random walks. Within model, can define set scenarios correspond different sets model parameter values.","code":""},{"path":"/articles/fidelity_vignette1.html","id":"parameterize-simulation-scenarios","dir":"Articles","previous_headings":"Goal 1: Explore effect of movement and landscape characteristics on patterns of return","what":"Parameterize simulation scenarios","title":"Calculating animal site fidelity in R with package `fidelity`","text":"simplest model implemented fidelity correlated random walk (CRW). model, can change value parameter \\(\\rho\\) (movement autocorrelation, directional persistence). \\(\\rho = 0\\), model completely random walk, angle independent previous one. value \\(\\rho\\) increases, consecutive angles become increasingly correlated. expect higher movement autocorrelation result fewer returns lower one. Let’s use function create_scenarios_crw() parameterize three CRW scenarios: first scenario completely random walk, second scenario correlated random walk intermediate movement autocorrelation, third scenario almost perfectly correlated random walk. now, three movement models implemented fidelity besides CRW: constrained correlated random walk (CCRW), agent moves within non-permeable reflective boundary represents enclosure; mixture correlated random walk (MCRW), agent moves faster straighter unprofitable habitat slower tortuously profitable habitat; biased correlated random walk (BCRW), agent attracted profitable habitat surroundings. Unlike first two, last two models require agent moves landscape heterogeneous habitat quality. Let’s use BCRW example parameterize type model. parameterize BCRW scenario, must start creating one synthetic landscapes agent move . can create landscapes fidelity using function sim_land(). , assuming meters units, creating set landscapes resolution 10 m 1-km extent. defining center point landscape coordinates (0, 0). parameter \\(\\kappa\\) indicates spatial aggregation, “clumpy” habitat . Let’s create two landscapes different amounts spatial aggregation (50 500). parameter \\(\\chi\\) indicates spatial heterogeneity, much habitat quality varies across landscape. , ’ll hold constant landscapes. resulting landscapes look like:  simulation functions ’ll use need read landscape rasters disk, let’s go ahead save files: ’s important assign names raster match path ’re going use load (can use absolute paths , better, relative paths respect working directory): Now let’s define set BCRW scenarios. ’ll hold value \\(\\rho\\) constant across scenarios. parameter \\(\\beta\\) directional bias indicates strongly agent attracted high-quality habitat. ’ll create scenario bias (note , without bias, exact scenario second CRW scenario parameterized ), scenario low bias, scenario moderate bias. higher bias, likely expect returns occur. want sets movement parameter combination landscapes generated, total 1 * 3 * 2 = 6 scenarios: Now can rbind scenarios together single data frame:","code":"scen_crw <- create_scenarios_crw(rho = c(0, 0.5, 0.99)) #> Creating 3 CRW scenarios lands <- sim_land(res = 10, ext = 1000, orig = c(\"x\" = 0, \"y\" = 0), kappa = c(50, 500), chi = 0.5) raster::writeRaster(lands,                      filename = \"inst/Landscapes/land.tif\",                      bylayer = TRUE,                      suffix = names(lands)) land_names <- paste0(\"inst/Landscapes/land_\",                      names(lands),                       \".tif\") scen_bcrw <- create_scenarios_bcrw(rho = 0.5,                                    beta = c(0, 0.1, 0.5),                                    lands = land_names) #> Creating 6 BCRW scenarios (scen <- rbind(scen_crw, scen_bcrw)) #>    rho boundary_size habitat_effect beta #> 1 0.00            NA             NA   NA #> 2 0.50            NA             NA   NA #> 3 0.99            NA             NA   NA #> 4 0.50            NA             NA  0.0 #> 5 0.50            NA             NA  0.1 #> 6 0.50            NA             NA  0.5 #> 7 0.50            NA             NA  0.0 #> 8 0.50            NA             NA  0.1 #> 9 0.50            NA             NA  0.5 #>                                        lands kappa chi scenario_id #> 1                                       <NA>    NA  NA       CRW_1 #> 2                                       <NA>    NA  NA       CRW_2 #> 3                                       <NA>    NA  NA       CRW_3 #> 4  inst/Landscapes/land_kappa_50_chi_0.5.tif    50 0.5      BCRW_1 #> 5  inst/Landscapes/land_kappa_50_chi_0.5.tif   500 0.5      BCRW_2 #> 6  inst/Landscapes/land_kappa_50_chi_0.5.tif    50 0.5      BCRW_3 #> 7 inst/Landscapes/land_kappa_500_chi_0.5.tif   500 0.5      BCRW_4 #> 8 inst/Landscapes/land_kappa_500_chi_0.5.tif    50 0.5      BCRW_5 #> 9 inst/Landscapes/land_kappa_500_chi_0.5.tif   500 0.5      BCRW_6"},{"path":"/articles/fidelity_vignette1.html","id":"simulate-movement-paths","dir":"Articles","previous_headings":"Goal 1: Explore effect of movement and landscape characteristics on patterns of return","what":"Simulate movement paths","title":"Calculating animal site fidelity in R with package `fidelity`","text":"defined simulation scenarios, ’s time simulate movement paths. run BCRW, need specify value perceptual range, .e., far away can agent perceive high-quality patch direct movements towards . parameter set biologically reasonable value, course also interesting see results affected . , ’ll set perceptual range 50 m: BCRW simulation function also require map pixel neighborhoods. maps specific landscape extent resolution, need re-calculated new landscapes. case, two landscapes extent resolution (value \\(\\kappa\\) varies ), can calculate neighborhoods just using one two landscapes template. can use function get_neighbors() pass chosen value perceptual range: finally ready simulate! function simulate_tracks() wrapper function call appropriate model-specific simulation function depending scenario parameterized, can run simulations different types models . ’ll need define many steps simulation run (, let’s use 100), many replicates run (wanted make robust conclusions need large number replicates, simplicity, let’s just 1 ), coordinates starting location simulation (can jittered setting jitter = TRUE), shape scale step length distribution (assuming Weibull distribution). remaining arguments used pass function scenario data frame, value perceptual range, neighborhood map: output simulation look like: Let’s take look path simulated scenario CRW_1 (completely random walk):  , let’s take look path simulated scenario BCRW_2 (BCRW low bias landscape low aggregation):  Finally, let’s take look path simulated scenario BCRW_5 (BCRW low bias landscape high aggregation):  Notice , scenario, agent ends reaching edge landscape. case, simulation interrupted remainder steps censored. specific scenario 83 rows instead 101:","code":"prange <- 50 neigh <- get_neighbors(lands[[1]], prange = prange) sim <- simulate_tracks(scenarios = scen,                        n_steps = 100,                        n_tracks = 1,                        start_loc = data.frame(x = 0, y = 0),                        sl_par = c(1, 20),                        prange = prange,                        jitter = FALSE,                        neighbors = neigh) head(sim) #>   id          x          y step rho boundary_size habitat_effect beta landscape #> 1  1   0.000000   0.000000    0   0            NA             NA   NA      <NA> #> 2  1 -14.945691 -21.910068    1   0            NA             NA   NA      <NA> #> 3  1   4.800396 -20.926486    2   0            NA             NA   NA      <NA> #> 4  1   2.837701  -9.958197    3   0            NA             NA   NA      <NA> #> 5  1   2.585969  -8.049080    4   0            NA             NA   NA      <NA> #> 6  1  28.997396 -26.154277    5   0            NA             NA   NA      <NA> #>   scenario_id #> 1       CRW_1 #> 2       CRW_1 #> 3       CRW_1 #> 4       CRW_1 #> 5       CRW_1 #> 6       CRW_1 tail(sim) #>     id         x         y step rho boundary_size habitat_effect beta #> 886  1 -239.7802 -338.2598   95 0.5            NA             NA  0.5 #> 887  1 -227.3308 -403.2010   96 0.5            NA             NA  0.5 #> 888  1 -236.5789 -417.1284   97 0.5            NA             NA  0.5 #> 889  1 -235.3682 -412.1410   98 0.5            NA             NA  0.5 #> 890  1 -222.6736 -405.9211   99 0.5            NA             NA  0.5 #> 891  1 -212.5907 -414.7889  100 0.5            NA             NA  0.5 #>                                               landscape scenario_id #> 886 fidelity/inst/Landscapes/land_kappa_500_chi_0.5.tif      BCRW_6 #> 887 fidelity/inst/Landscapes/land_kappa_500_chi_0.5.tif      BCRW_6 #> 888 fidelity/inst/Landscapes/land_kappa_500_chi_0.5.tif      BCRW_6 #> 889 fidelity/inst/Landscapes/land_kappa_500_chi_0.5.tif      BCRW_6 #> 890 fidelity/inst/Landscapes/land_kappa_500_chi_0.5.tif      BCRW_6 #> 891 fidelity/inst/Landscapes/land_kappa_500_chi_0.5.tif      BCRW_6 plot(sim[sim$scenario_id == \"CRW_1\" & sim$id == 1, ]$x,       sim[sim$scenario_id == \"CRW_1\" & sim$id == 1, ]$y,      type = \"l\", xlab = \"x\", ylab = \"y\") raster::plot(lands[[1]]) lines(sim[sim$scenario_id == \"BCRW_2\", ]$x,        sim[sim$scenario_id == \"BCRW_2\", ]$y) raster::plot(lands[[2]]) lines(sim[sim$scenario_id == \"BCRW_5\", ]$x,        sim[sim$scenario_id == \"BCRW_5\", ]$y) nrow(sim[sim$scenario_id == \"BCRW_1\", ]) #> [1] 101 nrow(sim[sim$scenario_id == \"BCRW_2\", ]) #> [1] 101 nrow(sim[sim$scenario_id == \"BCRW_3\", ]) #> [1] 101 nrow(sim[sim$scenario_id == \"BCRW_4\", ]) #> [1] 101 nrow(sim[sim$scenario_id == \"BCRW_5\", ]) #> [1] 83 nrow(sim[sim$scenario_id == \"BCRW_6\", ]) #> [1] 101"},{"path":"/articles/fidelity_vignette1.html","id":"calculate-patterns-of-return-on-simulated-paths","dir":"Articles","previous_headings":"Goal 1: Explore effect of movement and landscape characteristics on patterns of return","what":"Calculate patterns of return on simulated paths","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Now set simulated paths, can calculate patterns returns scenario. make sure count returns within scenario replicate, let’s split simulation results list based scenario ID agent ID: function calc_returns() assigns 1 steps satisfy custom definition return 0 steps . definition can customized space using argument dist – close previously visited location agent need go us consider return? can customized time using argument lag – long must agent distance dist away location count new visit return rather just residence? , ’ll set dist 10 meters lag 10 steps: lags specify (case, just one), function add column simulation data frame: value NA steps ineligible count returns (case, first 10), 0 steps returns, 1 steps satisfy definition returns. case, none first 4 steps 10-step lag happened returns. Besides knowing whether return happened , may also interested quantifying spatial intensity returns. metric useful can help us discriminate returns happen chance (returns spread among many locations) versus returns driven systematic drivers (many returns concentrated among locations). function calc_spint() calculates spatial intensity returns simulation scenarios:","code":"sim_list <- split(sim, f = paste(sim$id, sim$scenario_id)) rets <- do.call(\"rbind\", lapply(1:length(sim_list),                       FUN = function(x) {                         fidelity::calc_returns(                           tracks = sim_list[[x]],                           dist = 10,                           lag = 10)                       })) head(rets, 15) #>    id          x            y step rho boundary_size habitat_effect beta #> 1   1   0.000000    0.0000000    0 0.5            NA             NA    0 #> 2   1   1.167169   -0.9063084    1 0.5            NA             NA    0 #> 3   1   6.644097   -2.6846214    2 0.5            NA             NA    0 #> 4   1   7.030207   -3.0187556    3 0.5            NA             NA    0 #> 5   1  21.198206    9.0795829    4 0.5            NA             NA    0 #> 6   1  53.400107  -22.0152171    5 0.5            NA             NA    0 #> 7   1  68.115971  -37.2992881    6 0.5            NA             NA    0 #> 8   1  74.518235  -47.8817753    7 0.5            NA             NA    0 #> 9   1  75.307828  -65.9028509    8 0.5            NA             NA    0 #> 10  1  95.911165  -72.2624229    9 0.5            NA             NA    0 #> 11  1  57.427406 -114.5317217   10 0.5            NA             NA    0 #> 12  1  73.925033 -140.7330638   11 0.5            NA             NA    0 #> 13  1 113.682533 -138.3237969   12 0.5            NA             NA    0 #> 14  1 122.176538 -134.0113648   13 0.5            NA             NA    0 #> 15  1 131.247000 -133.4714379   14 0.5            NA             NA    0 #>                                             landscape scenario_id lag_10 #> 1  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 2  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 3  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 4  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 5  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 6  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 7  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 8  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 9  fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 10 fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 11 fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1     NA #> 12 fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1      0 #> 13 fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1      0 #> 14 fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1      0 #> 15 fidelity/inst/Landscapes/land_kappa_50_chi_0.5.tif      BCRW_1      0 spint <- calc_spint(rets = rets, dist = 10, lag = 10)"},{"path":"/articles/fidelity_vignette1.html","id":"evaluate-effect-of-simulation-parameters-on-patterns-of-return","dir":"Articles","previous_headings":"Goal 1: Explore effect of movement and landscape characteristics on patterns of return","what":"Evaluate effect of simulation parameters on patterns of return","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Now can take look parameter values used scenarios affect occurrence returns well spatial intensity. Let’s look CRW model first:    plots show , higher movement autocorrelation, less frequent returns become. two values spatial intensity returns occurred third scenario, , based one track , detect difference (replicates probably helped). looking tracks, evident movements become much directed movement autocorrelation increases. Now let’s look BCRW scenarios. Let’s start simulated landscape low spatial aggregation:    , can see returns become frequent bias towards profitable habitat increases. Spatial intensity higher scenarios bias compared scenario bias. looking paths, notice agent moving much tortuously scenario strongest bias encountered profitable patch. happens patches much larger high-quality habitat aggregated?    Similarly, stronger bias, frequent returns, although returns happened second scenario particular instance (remember scenario agent happened move landscape, means shorter simulation fewer chances return). two values spatial intensity returns happened one three scenarios, really detect difference . exercise, learned interesting facts simple metrics behavior landscape configuration expected affect patterns returns real systems.","code":"library(dplyr) library(ggplot2)  ggplot(rets %>% filter(!grepl(\"BCRW\", scenario_id)),        aes(x = step, y = lag_10, color = factor(lag_10))) +   geom_point() +   facet_wrap(~ rho) +   theme_bw() +   labs(x = \"Time step\", y = \"Return\", color = \"Return\") #> Warning: Removed 33 rows containing missing values (geom_point). ggplot(spint %>%           filter(!grepl(\"BCRW\", scenario_id)) %>%                    group_by(scenario_id) %>%                    summarize(mean_spint = mean(vals, na.rm = TRUE)),        aes(x = scenario_id, y = mean_spint)) +   geom_point() +   theme_bw() +   labs(x = \"Scenario\", y = \"Spatial intensity of returns\") ggplot(sim %>% filter(!grepl(\"BCRW\", scenario_id)),        aes(x = x, y = y)) +   geom_path() +   facet_wrap(~ rho) +   theme_void() ggplot(rets %>% filter(scenario_id %in% c(\"BCRW_1\", \"BCRW_2\", \"BCRW_3\")),        aes(x = step, y = lag_10, color = factor(lag_10))) +   geom_point() +   facet_wrap(~ beta) +   theme_bw() +   labs(x = \"Time step\", y = \"Return\", color = \"Return\") #> Warning: Removed 33 rows containing missing values (geom_point). ggplot(spint %>%           filter(scenario_id %in% c(\"BCRW_1\", \"BCRW_2\", \"BCRW_3\")) %>%                    group_by(scenario_id) %>%                    summarize(mean_spint = mean(vals, na.rm = TRUE)),        aes(x = scenario_id, y = mean_spint)) +   geom_point() +   theme_bw() +   labs(x = \"Scenario\", y = \"Spatial intensity of returns\") ggplot(sim %>% filter(scenario_id %in% c(\"BCRW_1\", \"BCRW_2\", \"BCRW_3\")),        aes(x = x, y = y)) +   geom_path() +   facet_wrap(~ beta) +   theme_void() ggplot(rets %>% filter(scenario_id %in% c(\"BCRW_4\", \"BCRW_5\", \"BCRW_6\")),        aes(x = step, y = lag_10, color = factor(lag_10))) +   geom_point() +   facet_wrap(~ beta) +   theme_bw() +   labs(x = \"Time step\", y = \"Return\", color = \"Return\") #> Warning: Removed 33 rows containing missing values (geom_point). ggplot(spint %>%           filter(scenario_id %in% c(\"BCRW_4\", \"BCRW_5\", \"BCRW_6\")) %>%                    group_by(scenario_id) %>%                    summarize(mean_spint = mean(vals, na.rm = TRUE)),        aes(x = scenario_id, y = mean_spint)) +   geom_point() +   theme_bw() +   labs(x = \"Scenario\", y = \"Spatial intensity of returns\") ggplot(sim %>% filter(scenario_id %in% c(\"BCRW_4\", \"BCRW_5\", \"BCRW_6\")),        aes(x = x, y = y)) +   geom_path() +   facet_wrap(~ beta) +   theme_void()"},{"path":"/articles/fidelity_vignette1.html","id":"goal-2-quantify-site-fidelity-by-contrasting-empirical-data-with-an-ecologically-meaningful-null-expectation","dir":"Articles","previous_headings":"","what":"Goal 2: Quantify site fidelity by contrasting empirical data with an ecologically meaningful null expectation","title":"Calculating animal site fidelity in R with package `fidelity`","text":"goal quantify site fidelity empirical system, can use slightly different workflow. Let’s make example data Picardi et al. 2022 (available https://zenodo.org/record/7079984 – thanks Dr. Hall Sawyer generously sharing data us!). real GPS-tracking data one individual mule deer collected 2-hour resolution summer 2016 Wyoming: Rather simply assuming returns may observe animal’s track must due memory, can contrast empirically observed returns baseline non-zero expectation derived appropriate null model via simulation.","code":"head(mule) #>    id                date      x       y #> 1 445 2016-05-17 18:00:00 535031 4792508 #> 2 445 2016-05-17 20:00:00 534595 4792287 #> 3 445 2016-05-17 22:00:00 534611 4792390 #> 4 445 2016-05-18 00:00:00 534558 4792157 #> 5 445 2016-05-18 02:00:00 532876 4792317 #> 6 445 2016-05-18 04:00:00 532647 4792231"},{"path":"/articles/fidelity_vignette1.html","id":"parameterize-an-appropriate-null-model","dir":"Articles","previous_headings":"Goal 2: Quantify site fidelity by contrasting empirical data with an ecologically meaningful null expectation","what":"Parameterize an appropriate null model","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Depending study objectives, different models can appropriately chosen null models site fidelity. objective quantify whether empirically observed returns due memory, one strive parameterize null model realistic enough can argued behavioral processes memory (e.g., movement, habitat selection) accounted . observed patterns returns still exceed expected based model accounts everything memory, can confidently attribute excess memory. Picardi et al. 2022, used integrated step selection function hyper-realistic null model able account movement process habitat selection process simultaneously. objective quantify whether empirically observed returns generally due systematic drivers rather just pure chance, simple random walk can appropriate null model. Note , case, inference can made specific drivers empirically observed returns, movement characteristics, habitat selection, memory. can answer whether animal returning expected random walk . , simplicity, let’s use pure random walk null model:","code":"random_scen <- create_scenarios_crw(rho = 0) #> Creating 1 CRW scenarios"},{"path":"/articles/fidelity_vignette1.html","id":"simulate-movement-paths-1","dir":"Articles","previous_headings":"Goal 2: Quantify site fidelity by contrasting empirical data with an ecologically meaningful null expectation","what":"Simulate movement paths","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Let’s simulate random walk starts strating point includes many steps empirical mule deer track: step length parameters specified estimated individual mule deer 2-hour time resolution via integrated step selection analysis.","code":"sim_null <- simulate_tracks(scenarios = random_scen,                        n_steps = nrow(mule),                        n_tracks = 1,                        start_loc = data.frame(x = mule$X[1], y = mule$Y[1]),                        sl_par = c(0.6, 330))"},{"path":"/articles/fidelity_vignette1.html","id":"calculate-patterns-of-return-on-simulated-paths-1","dir":"Articles","previous_headings":"Goal 2: Quantify site fidelity by contrasting empirical data with an ecologically meaningful null expectation","what":"Calculate patterns of return on simulated paths","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Let’s now calculate occurrence spatial intensity returns simulated track output null random walk model: Note set value distance 50 m, meaning animal needs within 50 m previously visited location visit count return. used lag 12 * 7 = 84, corresponding week (12 locations per day times 7 days), meaning animal needs away location least one week new visit count return.","code":"ret_null <- fidelity::calc_returns(tracks = sim_null,                           dist = 50,                           lag = 12 * 7)  spint_null <- fidelity::calc_spint(ret_null,                                     dist = 50,                                    lag = 12 * 7)"},{"path":"/articles/fidelity_vignette1.html","id":"calculate-patterns-of-return-on-empirically-observed-paths","dir":"Articles","previous_headings":"Goal 2: Quantify site fidelity by contrasting empirical data with an ecologically meaningful null expectation","what":"Calculate patterns of return on empirically observed paths","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Let’s now calculate occurrence spatial intensity returns empirically observed mule deer track: Note , single track rather set simulations different scenarios, used function calc_spint_track() rather calc_spint(). calc_spint() just wrapper calls calc_spint_track() applies set scenarios, work use scenario_id column real data. one wanted calculate spatial intensity returns multiple empirical tracks , solution simply add “scenario ID” column real data different ID assigned track.","code":"ret_obs <- fidelity::calc_returns(tracks = mule,                           dist = 50,                           lag = 12 * 7) #> Column 'scenario_id' is missing, splitting by 'id' only  spint_obs <- fidelity::calc_spint_track(ret_obs,                                     dist = 50,                                    lag = 12 * 7)"},{"path":"/articles/fidelity_vignette1.html","id":"compare","dir":"Articles","previous_headings":"Goal 2: Quantify site fidelity by contrasting empirical data with an ecologically meaningful null expectation","what":"Compare","title":"Calculating animal site fidelity in R with package `fidelity`","text":"Let’s now compare patterns returns empirically observed track null model:    frequency spatial intensity returns much higher observed track compared null, indicating returns observed empirical data explained chance alone.","code":"ret_obs$type <- \"Observed\" ret_null$type <- \"Null\" ret_null$date <- c(ret_obs$date, NA) comp_ret <- rbind(ret_obs, ret_null[, c(\"id\", \"date\", \"x\", \"y\", \"lag_84\", \"type\")])  ggplot(comp_ret, aes(x = date, y = lag_84, color = factor(lag_84))) +   geom_point() +   facet_wrap(~ type) +   theme_bw() +   labs(x = \"Timestamp\", y = \"Return\", color = \"Return\") #> Warning: Removed 171 rows containing missing values (geom_point). spint_null$type <- \"Null\" comp_spint <- rbind(spint_null,                     data.frame(scenario_id = \"real\",                                vals = spint_obs,                                type = \"Observed\"))  ggplot(comp_spint %>%           group_by(type) %>%           summarize(mean_spint = mean(vals, na.rm = TRUE)),        aes(x = type, y = mean_spint)) +   geom_point() +   theme_bw() +   labs(x = \"Path type\", y = \"Spatial intensity of returns\") ggplot(comp_ret, aes(x = x, y = y)) +   geom_path() +   facet_wrap(~ type, scales = \"free\") +   theme_void()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2022). fidelity: Generate Null Expectations Animal Site Fidelity. R package version 0.0.0.9000.","code":"@Manual{,   title = {fidelity: Generate Null Expectations for Animal Site Fidelity},   author = {Who wrote it},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Generate Null Expectations for Animal Site Fidelity","text":"fidelity package includes functions simulate individual tracks variety mechanistic movement models calculate metrics site fidelity.","code":""},{"path":"/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation Instructions","title":"Generate Null Expectations for Animal Site Fidelity","text":"install current version fidelity: remotes::install_github(\"picardis/fidelity\", build_vignettes = TRUE)","code":""},{"path":"/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Generate Null Expectations for Animal Site Fidelity","text":"read package vignette (installing package): RShowDoc(\"fidelity_vignette1\", package = \"fidelity\")","code":""},{"path":"/index.html","id":"contribution-instructions","dir":"","previous_headings":"","what":"Contribution Instructions","title":"Generate Null Expectations for Animal Site Fidelity","text":"Contributions welcome Issues.","code":""},{"path":"/index.html","id":"publication","dir":"","previous_headings":"","what":"Publication","title":"Generate Null Expectations for Animal Site Fidelity","text":"Functions fidelity implement approach first described manuscript, “Defining null expectations animal site fidelity” (Picardi et al. 2022 Ecology Letters). Find : https://doi.org/10.1111/ele.14148","code":""},{"path":"/reference/calc_returns.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Returns (Multiple Tracks) — calc_returns","title":"Calculate Returns (Multiple Tracks) — calc_returns","text":"Function calculate returns multiple tracks based spatial temporal criteria.","code":""},{"path":"/reference/calc_returns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Returns (Multiple Tracks) — calc_returns","text":"","code":"calc_returns(tracks, dist, lag, window = Inf)"},{"path":"/reference/calc_returns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Returns (Multiple Tracks) — calc_returns","text":"tracks Data frame movement tracks (e.g., output simulate_tracks(), set real tracks). Must contain columns id (individual identifier), x y (UTM lat/long coordinates) minimum. dist Numeric. Maximum distance considered return. Unit match unit coordinates: m UTM, degrees lat/long. lag Numeric. Vector fidelity lags (unit locations, e.g., 42 one week 6h resolution). See Details definition fidelity lag. window # Duration fidelity window (Inf start track, integer fixed duration; unit locations, e.g., 42 one week 6h resolution). Default Inf. See Details definition fidelity window.","code":""},{"path":"/reference/calc_returns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Returns (Multiple Tracks) — calc_returns","text":"Data frame movement tracks containing one additional column lag indicating whether location return (1) (0). Locations outside fidelity window assigned NA.","code":""},{"path":"/reference/calc_returns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Returns (Multiple Tracks) — calc_returns","text":"fidelity lag defines considered \"non-consecutive\" visits: visit within distance dist previously visited location non-consecutive occurs least lag days latest visit location. fidelity window encompasses range eligible steps returns location. location visited time T, fidelity window includes steps time T - lag - window time T - lag. Steps T - lag + 1 T outside fidelity window revisitations within period counted returns.","code":""},{"path":"/reference/calc_ret_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Returns (Single Track) — calc_ret_track","title":"Calculate Returns (Single Track) — calc_ret_track","text":"Function calculate returns single track. Called calc_returns().","code":""},{"path":"/reference/calc_ret_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Returns (Single Track) — calc_ret_track","text":"","code":"calc_ret_track(t, dist, lag, window = Inf)"},{"path":"/reference/calc_ret_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Returns (Single Track) — calc_ret_track","text":"t Data frame single movement track (e.g., output simulate_tracks() one individual, real track). Must contain columns x y (UTM lat/long coordinates) minimum. dist Numeric. Maximum distance considered return. Unit match unit coordinates: m UTM, degrees lat/long. lag Numeric. Vector fidelity lags (unit locations, e.g., 42 one week 6h resolution). See Details definition fidelity lag. window # Duration fidelity window (Inf start track, integer fixed duration; unit locations, e.g., 42 one week 6h resolution). Default Inf. See Details definition fidelity window.","code":""},{"path":"/reference/calc_ret_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Returns (Single Track) — calc_ret_track","text":"Returns original track one additional column lag indicating whether location return (1) (0). Locations outside fidelity window assigned NA. #' @details fidelity lag defines considered \"non-consecutive\" visits: visit within distance dist previously visited location non-consecutive occurs least lag days latest visit location. fidelity window encompasses range eligible steps returns location. location visited time T, fidelity window includes steps time T - lag - window time T - lag. Steps T - lag + 1 T outside fidelity window revisitations within period counted returns.","code":""},{"path":"/reference/calc_spint.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Spatial Intensity of Returns (Multiple Tracks) — calc_spint","title":"Calculate Spatial Intensity of Returns (Multiple Tracks) — calc_spint","text":"Function calculate spatial intensity returns.","code":""},{"path":"/reference/calc_spint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Spatial Intensity of Returns (Multiple Tracks) — calc_spint","text":"","code":"calc_spint(rets, dist, lag)"},{"path":"/reference/calc_spint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Spatial Intensity of Returns (Multiple Tracks) — calc_spint","text":"rets Data frame returns obtained calc_returns(). dist Numeric. Distance used calculate returns. Unit match unit coordinates: m UTM, degrees lat/long. lag Numeric. Temporal lag returns (unit locations, e.g., 42 one week 6h resolution). Must match one lags used calc_returns().","code":""},{"path":"/reference/calc_spint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Spatial Intensity of Returns (Multiple Tracks) — calc_spint","text":"data frame 2 columns, one scenario ID one number returns revisited location. scenario, data frame include many rows number locations revisited least .","code":""},{"path":"/reference/calc_spint_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Spatial Intensity of Returns (Single Track) — calc_spint_track","title":"Calculate Spatial Intensity of Returns (Single Track) — calc_spint_track","text":"Function calculate spatial intensity returns single scenario/ID combination. Called calc_spint().","code":""},{"path":"/reference/calc_spint_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Spatial Intensity of Returns (Single Track) — calc_spint_track","text":"","code":"calc_spint_track(r, dist, lag)"},{"path":"/reference/calc_spint_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Spatial Intensity of Returns (Single Track) — calc_spint_track","text":"r Data frame returns obtained calc_returns() one individual. dist Numeric. Distance used calculate returns. Unit match unit coordinates: m UTM, degrees lat/long. #' @param lag Numeric. Temporal lag returns (unit locations, e.g., 42 one week 6h resolution). Must match one lags used calc_returns().","code":""},{"path":"/reference/calc_spint_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Spatial Intensity of Returns (Single Track) — calc_spint_track","text":"vector many elements number locations revisited least . Values indicate number returns revisited locations.","code":""},{"path":"/reference/create_scenarios_bcrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Biased Correlated Random Walk Scenarios (BCRW) — create_scenarios_bcrw","title":"Create Biased Correlated Random Walk Scenarios (BCRW) — create_scenarios_bcrw","text":"Function generate one Biased Correlated Random Walk scenario/s.","code":""},{"path":"/reference/create_scenarios_bcrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Biased Correlated Random Walk Scenarios (BCRW) — create_scenarios_bcrw","text":"","code":"create_scenarios_bcrw(rho, beta, lands)"},{"path":"/reference/create_scenarios_bcrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Biased Correlated Random Walk Scenarios (BCRW) — create_scenarios_bcrw","text":"rho Numeric vector (length) autocorrelation parameter values beta Numeric vector (length) specifying values bias parameter. lands Either RasterStack output sim_land character vector providing paths landscape rasters loaded disk used simulation.","code":""},{"path":"/reference/create_scenarios_bcrw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Biased Correlated Random Walk Scenarios (BCRW) — create_scenarios_bcrw","text":"Returns data frame describing scenario/s, one row per scenario using possible combinations specified parameter values, total length(rho) * length(beta) * length(lands) rows. Includes columns rho, boundary_size (set NA applicable BCRW), habitat_effect (set NA applicable BCRW), beta, lands, scenario_id (unique identifier scenario).","code":""},{"path":"/reference/create_scenarios_ccrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Constrained Correlated Random Walk Scenarios (CCRW) — create_scenarios_ccrw","title":"Create Constrained Correlated Random Walk Scenarios (CCRW) — create_scenarios_ccrw","text":"Function generate one Constrained Correlated Random Walk scenario/s.","code":""},{"path":"/reference/create_scenarios_ccrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Constrained Correlated Random Walk Scenarios (CCRW) — create_scenarios_ccrw","text":"","code":"create_scenarios_ccrw(rho, boundary_size)"},{"path":"/reference/create_scenarios_ccrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Constrained Correlated Random Walk Scenarios (CCRW) — create_scenarios_ccrw","text":"rho Numeric vector (length) autocorrelation parameter values boundary_size Numeric vector (length) specifying values size bounding box (length side). Units m user intends use UTM coordinates simulation degrees lat/long.","code":""},{"path":"/reference/create_scenarios_ccrw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Constrained Correlated Random Walk Scenarios (CCRW) — create_scenarios_ccrw","text":"Returns data frame describing scenario/s, one row per scenario using possible combinations specified parameter values, total length(rho) * length(boundary_size) rows. Includes columns rho, boundary_size, habitat_effect (set NA applicable CCRW), beta (set NA applicable CCRW), lands (set NA applicable CCRW), scenario_id (unique identifier scenario).","code":""},{"path":"/reference/create_scenarios_crw.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Correlated Random Walk Scenarios (CRW) — create_scenarios_crw","title":"Create Correlated Random Walk Scenarios (CRW) — create_scenarios_crw","text":"Function generate one Correlated Random Walk scenario/s.","code":""},{"path":"/reference/create_scenarios_crw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Correlated Random Walk Scenarios (CRW) — create_scenarios_crw","text":"","code":"create_scenarios_crw(rho)"},{"path":"/reference/create_scenarios_crw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Correlated Random Walk Scenarios (CRW) — create_scenarios_crw","text":"rho Numeric vector (length) autocorrelation parameter values","code":""},{"path":"/reference/create_scenarios_crw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Correlated Random Walk Scenarios (CRW) — create_scenarios_crw","text":"Returns data frame describing scenario/s, one row per scenario total length(rho) rows. Includes columns rho, boundary_size (set NA applicable CRW), habitat_effect (set NA applicable CRW), beta (set NA applicable CRW), lands (set NA applicable CRW), scenario_id (unique identifier scenario).","code":""},{"path":"/reference/create_scenarios_mcrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Mixture Correlated Random Walk Scenarios (MCRW) — create_scenarios_mcrw","title":"Create Mixture Correlated Random Walk Scenarios (MCRW) — create_scenarios_mcrw","text":"Function generate one Mixture Correlated Random Walk scenario/s.","code":""},{"path":"/reference/create_scenarios_mcrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Mixture Correlated Random Walk Scenarios (MCRW) — create_scenarios_mcrw","text":"","code":"create_scenarios_mcrw(rho, habitat_effect, lands)"},{"path":"/reference/create_scenarios_mcrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Mixture Correlated Random Walk Scenarios (MCRW) — create_scenarios_mcrw","text":"rho Numeric vector (length) autocorrelation parameter values habitat_effect Numeric vector (length) specifying values strength habitat effect. lands Character vector (length) providing paths landscape rasters loaded disk used simulation.","code":""},{"path":"/reference/create_scenarios_mcrw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Mixture Correlated Random Walk Scenarios (MCRW) — create_scenarios_mcrw","text":"Returns data frame describing scenario/s, one row per scenario using possible combinations specified parameter values, total length(rho) * length(habitat_effect) * length(lands) rows. Includes columns rho, boundary_size (set NA applicable MCRW), habitat_effect, beta (set NA applicable MCRW), lands, scenario_id (unique identifier scenario).","code":""},{"path":"/reference/end_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate End Point Coordinates — end_coords","title":"Calculate End Point Coordinates — end_coords","text":"Function calculate end point coordinates step turning angle. Called sim_bcrw().","code":""},{"path":"/reference/end_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate End Point Coordinates — end_coords","text":"","code":"end_coords(step, angle, start_x, start_y)"},{"path":"/reference/end_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate End Point Coordinates — end_coords","text":"step Numeric. Step length (m UTM coordinates, degrees lat/long) angle Numeric. Turning angle (degrees) start_x Numeric. X coordinate start location (UTM Easting longitude) start_y Numeric. Y coordinate start location (UTM Northing latitude)","code":""},{"path":"/reference/end_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate End Point Coordinates — end_coords","text":"data frame containing end points coordinates step turning angle input.","code":""},{"path":"/reference/end_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate End Point Coordinates — end_coords","text":"Code adapted https://rdrr.io/github/ptompalski/UsefulRFunctions/src/R/circular2xy.R","code":""},{"path":"/reference/get_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Neighborhoods — get_neighbors","title":"Get Neighborhoods — get_neighbors","text":"Function create map neighboring cells raster within user-defined perceptual range distance cell.","code":""},{"path":"/reference/get_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Neighborhoods — get_neighbors","text":"","code":"get_neighbors(lands, prange)"},{"path":"/reference/get_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Neighborhoods — get_neighbors","text":"lands Raster habitat quality. prange Numeric. Perceptual range radius. Units match units coordinates: m UTM, degrees lat/long.","code":""},{"path":"/reference/get_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Neighborhoods — get_neighbors","text":"list one element per raster cell. element contains identifiers neighboring cells within specified perceptual range.","code":""},{"path":"/reference/simulate_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate movement tracks — simulate_tracks","title":"Simulate movement tracks — simulate_tracks","text":"Wrapper function simulate tracks multiple scenarios/movement models.","code":""},{"path":"/reference/simulate_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate movement tracks — simulate_tracks","text":"","code":"simulate_tracks(   scenarios,   n_steps,   n_tracks,   start_loc,   sl_par,   prange = NA,   jitter = TRUE,   neighbors = NA )"},{"path":"/reference/simulate_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate movement tracks — simulate_tracks","text":"scenarios Data frame defining parameter values scenario formatted create_scenarios_crw(), create_scenarios_ccrw(), etc. n_steps Numeric. Number steps simulate n_tracks Numeric. Number tracks simulate. start_loc Data frame single row containing coordinates starting location (columns x y). 0, 0 unprojected. sl_par Vector length 2 containing shape scale step length distribution (Weibull) prange Numeric. Perceptual range radius. Units match units coordinates: m UTM, degrees lat/long. neighbors List cell neighborhoods created get_neighbors. #' @param jitter Logical. TRUE, starting locations jittered 20 km direction spatially-explicit models (MCRW BCRW).","code":""},{"path":"/reference/simulate_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate movement tracks — simulate_tracks","text":"Returns data frame containing coordinates location along simulated tracks associated simulation parameter values specified scenarios. track assigned individual id scenario.","code":""},{"path":"/reference/sim_bcrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Biased Correlated Random Walk (BCRW) — sim_bcrw","title":"Simulate Biased Correlated Random Walk (BCRW) — sim_bcrw","text":"Function simulate movement track Biased Correlated Random Walk model. Called needed simulate_tracks.","code":""},{"path":"/reference/sim_bcrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Biased Correlated Random Walk (BCRW) — sim_bcrw","text":"","code":"sim_bcrw(   n_steps,   sl_par,   rho,   start_loc,   beta,   prange,   lands,   neighbors,   jitter,   scenario_id = NA,   lands_name = NA )"},{"path":"/reference/sim_bcrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Biased Correlated Random Walk (BCRW) — sim_bcrw","text":"n_steps Numeric. Number steps simulate sl_par Vector length 2 containing shape scale step length distribution (Weibull) rho Numeric. Movement autocorrelation parameter start_loc Data frame single row containing coordinates starting location (columns x y). 0, 0 unprojected. beta Numeric. Value bias prange Numeric. Perceptual range radius. Units match units coordinates: m UTM, degrees lat/long. lands Raster habitat quality. neighbors List cell neighborhoods created get_neighbors. #' @param jitter Logical. TRUE, starting locations jittered 20 km direction spatially-explicit models (MCRW BCRW). scenario_id Character string. Optional ID current scenario. Automatically assigned using simulate_tracks(). lands_name Path landscape file.","code":""},{"path":"/reference/sim_bcrw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Biased Correlated Random Walk (BCRW) — sim_bcrw","text":"Returns data frame containing coordinates location along simulated track associated simulation parameter values specified create_scenarios_bcrw.","code":""},{"path":"/reference/sim_ccrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Constrained Correlated Random Walk (CCRW) — sim_ccrw","title":"Simulate Constrained Correlated Random Walk (CCRW) — sim_ccrw","text":"Function simulate movement track Constrained Correlated Random Walk model. Called needed simulate_tracks.","code":""},{"path":"/reference/sim_ccrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Constrained Correlated Random Walk (CCRW) — sim_ccrw","text":"","code":"sim_ccrw(   n_steps,   sl_par,   rho,   boundary_size,   start_loc = data.frame(x = 0, y = 0),   scenario_id = NA )"},{"path":"/reference/sim_ccrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Constrained Correlated Random Walk (CCRW) — sim_ccrw","text":"n_steps Numeric. Number steps simulate sl_par Vector length 2 containing shape scale step length distribution (Weibull) rho Numeric. Movement autocorrelation parameter boundary_size Numeric. Length side bounding box (m). start_loc Data frame single row containing coordinates starting location (columns x y). 0, 0 unprojected. scenario_id Character string. Optional ID current scenario. Automatically assigned using simulate_tracks().","code":""},{"path":"/reference/sim_ccrw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Constrained Correlated Random Walk (CCRW) — sim_ccrw","text":"Returns data frame containing coordinates location along simulated track associated simulation parameter values specified create_scenarios_ccrw.","code":""},{"path":"/reference/sim_ccrw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Constrained Correlated Random Walk (CCRW) — sim_ccrw","text":"Insert description","code":""},{"path":"/reference/sim_crw.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Correlated Random Walk (CRW) — sim_crw","title":"Simulate Correlated Random Walk (CRW) — sim_crw","text":"Function simulate movement track Correlated Random Walk model. Called needed simulate_tracks.","code":""},{"path":"/reference/sim_crw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Correlated Random Walk (CRW) — sim_crw","text":"","code":"sim_crw(   n_steps,   sl_par,   rho,   start_loc = data.frame(x = 0, y = 0),   scenario_id = NA )"},{"path":"/reference/sim_crw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Correlated Random Walk (CRW) — sim_crw","text":"n_steps Numeric. Number steps simulate sl_par Vector length 2 containing shape scale step length distribution (Weibull) rho Numeric. Movement autocorrelation parameter start_loc Data frame single row containing coordinates starting location (columns x y). 0, 0 unprojected. scenario_id Character string. Optional ID current scenario. Automatically assigned using simulate_tracks().","code":""},{"path":"/reference/sim_crw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Correlated Random Walk (CRW) — sim_crw","text":"data frame containing coordinates location along simulated track associated simulation parameter values specified create_scenarios_crw.","code":""},{"path":"/reference/sim_land.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated landscapes — sim_land","title":"Generate simulated landscapes — sim_land","text":"Function generate one set simulated landscapes user-specified extent, resolution, origin, spatial properties (contagion heterogeneity)","code":""},{"path":"/reference/sim_land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated landscapes — sim_land","text":"","code":"sim_land(res, ext, orig, kappa, chi)"},{"path":"/reference/sim_land.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated landscapes — sim_land","text":"res Numeric. Resolution raster (units match units coordinates, m UTM degrees lat/long) ext Numeric. Raster extent (units match units coordinates, m UTM degrees lat/long) orig Named vector x y coordinates center raster. kappa Numeric vector (length) contagion values simulate. chi Numeric vector (length) heterogeneity values simulate.","code":""},{"path":"/reference/sim_land.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated landscapes — sim_land","text":"Raster RasterStack simulated landscapes. many length(kappa) * length(chi).","code":""},{"path":"/reference/sim_mcrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Mixture Correlated Random Walk (MCRW) — sim_mcrw","title":"Simulate Mixture Correlated Random Walk (MCRW) — sim_mcrw","text":"Function simulate movement track Mixture Correlated Random Walk model. Called needed simulate_tracks.","code":""},{"path":"/reference/sim_mcrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Mixture Correlated Random Walk (MCRW) — sim_mcrw","text":"","code":"sim_mcrw(   n_steps,   sl_par,   rho,   start_loc,   habitat_effect,   lands,   jitter,   scenario_id = NA,   lands_name = NA )"},{"path":"/reference/sim_mcrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Mixture Correlated Random Walk (MCRW) — sim_mcrw","text":"n_steps Numeric. Number steps simulate sl_par Vector length 2 containing shape scale step length distribution (Weibull) rho Numeric. Movement autocorrelation parameter start_loc Data frame single row containing coordinates starting location (columns x y). 0, 0 unprojected. habitat_effect Numeric. Strength habitat response (range 0-1). lands Raster habitat quality. scenario_id Character string. Optional ID current scenario. Automatically assigned using simulate_tracks(). lands_name Path landscape file.","code":""},{"path":"/reference/sim_mcrw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Mixture Correlated Random Walk (MCRW) — sim_mcrw","text":"Returns data frame containing coordinates location along simulated track associated simulation parameter values specified create_scenarios_mcrw.","code":""}]
